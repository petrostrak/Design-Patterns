Intent:

Encapsulate a request as an object, thereby letting you parameterize clients with different requests,
queue or log requests, and support undoable operations.

Also known as: Action, Transaction

Use the Command pattern when you want to 

  -> parameterize objects by an action to perform. You can express such parameterization in a procedural
     language with a callback function, that is, a function that's registered somewhere to be called at
     a later point. Commands are an object-oriented replacement for callbacks.
     
  -> specify, queue and execute requests at different times. A Command object can have a lifetime independent
     of the original request. If the receiver of a request can be representd in an address space-independen way,
     then you can transfer a command object for the request to a different proccess and fulfill the request there.
     
  -> support undo. The Command's Execute operation can store state for reversing its effects in the command
     itself. The Command interface must have an added Unexecute operation that reverses the effects of a previous
     call to Execute. Executed commands are stored in a history list. Unlimited-level undo and redo is 
     achieved by traversing this list backwards and forwards calling Unexecute and Execute, respectively.
     
  -> support logging changes so that they can be reapplied in case of a system crash. By augmenting the Command
     interface with load and store operations, you can keep a persistent log of changes. recovering from a crash
     involves reloading logged commands from dist and reexecuting them with the Execute operations.
     
  -> structure a system around high-level operations build on primitives operations. Such a structure is common
     in informantion systems that support transactions. A transaction encapsulates a set of changes to data. The
     Command pattern offres a way to model transactions. Commands have a common interface, letting you invoke
     all transactions the same way. The pattern also makes it easy sto extend the system with new transactions.
